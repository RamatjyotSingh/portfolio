/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useAnimations, useFBX, useGLTF } from '@react-three/drei'
import { useEffect, useRef } from 'react'
export const Me = ({animationName="Idle",...props}) => {
    const groupRef = useRef()
  const { nodes, materials } = useGLTF('/models/human/me.glb')
    const {animations:idleAnimation} = useFBX('/models/human/idle.fbx')
    const {animations:hipHopAnimation1} = useFBX('/models/human/hiphop1.fbx')
    const {animations:hipHopAnimation2} = useFBX('/models/human/hiphop2.fbx')
    const {animations:hipHopAnimation3} = useFBX('/models/human/hiphop3.fbx')
    idleAnimation[0].name = 'idle'
    hipHopAnimation1[0].name = 'hiphop1'
    hipHopAnimation2[0].name = 'hiphop2'
    hipHopAnimation3[0].name = 'hiphop3'
  const {actions} = useAnimations([idleAnimation[0], hipHopAnimation1[0], hipHopAnimation2[0], hipHopAnimation3[0]], groupRef)
    useEffect(() => {
        if (actions && actions[animationName]) {
            actions[animationName].reset().fadeIn(0.5).play()
        }
    }, [animationName, actions])
    return (  
    <group {...props} dispose={null} ref={groupRef}>
      <skinnedMesh
        geometry={nodes.beard.geometry}
        material={materials.beard}
        skeleton={nodes.beard.skeleton}
      />
      <skinnedMesh
        geometry={nodes.body.geometry}
        material={materials.body}
        skeleton={nodes.body.skeleton}
      />
      <skinnedMesh
        geometry={nodes.bottom.geometry}
        material={materials.bottom}
        skeleton={nodes.bottom.skeleton}
      />
      <skinnedMesh
        geometry={nodes.eye_left.geometry}
        material={materials.eye}
        skeleton={nodes.eye_left.skeleton}
      />
      <skinnedMesh
        geometry={nodes.eye_right.geometry}
        material={materials.eye}
        skeleton={nodes.eye_right.skeleton}
      />
      <skinnedMesh
        geometry={nodes.footwear.geometry}
        material={materials.footwear}
        skeleton={nodes.footwear.skeleton}
      />
      <skinnedMesh
        geometry={nodes.glasses.geometry}
        material={materials.glasses}
        skeleton={nodes.glasses.skeleton}
      />
      <skinnedMesh
        geometry={nodes.hair.geometry}
        material={materials.hair}
        skeleton={nodes.hair.skeleton}
      />
      <skinnedMesh
        geometry={nodes.head.geometry}
        material={materials.head}
        skeleton={nodes.head.skeleton}
      />
      <skinnedMesh
        geometry={nodes.teeth.geometry}
        material={materials.teeth}
        skeleton={nodes.teeth.skeleton}
      />
      <skinnedMesh
        geometry={nodes.tongue.geometry}
        material={materials.teeth}
        skeleton={nodes.tongue.skeleton}
      />
      <skinnedMesh
        geometry={nodes.top.geometry}
        material={materials.top}
        skeleton={nodes.top.skeleton}
      />
      <primitive object={nodes.Hips} />
    </group>
  )
}

useGLTF.preload('/models/human/me.glb')
 export default Me